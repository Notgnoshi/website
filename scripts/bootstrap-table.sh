#!/bin/bash
# Take a table generated by https://www.tablesgenerator.com/html_tables and make it play nicely with boostrap.
# Recommended usage: Use tablesgenerator.com to generate an HTML table, then do `xclip -sel c -o | bootstrap-table.sh | xclip -sel c`.
# The output should _definitely_ be reformatted by beautifier or similar.
# It will extract and operate on multiple tables from an existing HTML file, but it will not be possible to operate on the existing files in-place.
set -o errexit
set -o pipefail
set -o nounset

# Default to stdin, but allow passing a filename.
INPUT=${1:--}
# Extract _just_ the tables from whatever the input is.
sed -n '/<table>/I,/<\/table>/I p' "${INPUT}" |
    # Remove all newlines so that sed can work
    tr -d '\n' |
    # Remove whitespace between tags
    sed -E 's|>\s+<|><|g' |
    # Make each table its own line
    sed 's|</table>|</table>\n|g' |
    # Trim all leading whitespace
    sed -E 's|^\s+||g' |
    # Wrap table in a <figure> that's centered and 50% wide.
    sed -E 's|<table>(.*)</table>|<figure class="figure d-block mx-auto w-50"><table>\1</table></figure>|g' |
    # Add bootstrap table classes
    sed -E 's|<table>(.*)</table>|<table class="table table-sm table-striped table-hover w-100">\1</table>|g' |
    # Add <thead> around first row beginning with a <th> and ending with a <th>. Add <tbody> around rest.
    perl -pe 's|<tr><th>(.*?)</th></tr><tr>(.*)</tr>|<thead><tr><th>\1</th></tr></thead><tbody><tr>\2</tr></tbody>|g' |
    # Add a <caption> above the <thead>
    perl -pe 's|<thead>|<caption></caption><thead>|' |
    # Add column scope to all of the table headers.
    perl -pe 's|<th>(.*?)</th>|<th scope="col">\1</th>|g' |
    # Add row scope to the first numeric <td></td> in a row.
    perl -pe 's|<tr><td>([0-9]+?)</td>|<tr><th scope="row">\1</th>|g'

# Use perl -0pe 's///gms' for multi-line patterns (called slurping).
