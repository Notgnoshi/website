# research.agill.xyz Nginx configuration

# The upstream component Nginx needs to connect to; I.e., the Django project.
upstream research_agill_xyz_django {
    server unix:///tmp/research.agill.xyz.sock;
}

server {
    # Either server address or fully-qualified domain name.
    server_name research.localhost research.agill.xyz;

    # The following is managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    charset utf-8;

    # Max upload size;
    client_max_body_size 16M;

    # Django static content
    location /static {
        # The BASE_REPOSITORY_PATH path is generated by deploy.py
        alias BASE_REPOSITORY_PATH/research.agill.xyz/research_agill_xyz/static;
    }

    # Root
    location / {
        uwsgi_pass research_agill_xyz_django;
        # The BASE_REPOSITORY_PATH path is generated by deploy.py
        include BASE_REPOSITORY_PATH/nginx/uwsgi_params;
    }
}
    }

    # Root
    location / {
        uwsgi_pass research_agill_xyz_django;
        # The BASE_REPOSITORY_PATH path is generated by deploy.py
        include BASE_REPOSITORY_PATH/nginx/uwsgi_params;
    }
}


server {
    if ($host = research.agill.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 default_server;
    listen [::]:80 default_server;
    server_name research.agill.xyz;
    return 404; # managed by Certbot
}
