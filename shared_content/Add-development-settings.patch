From 1b868736a25cf61f7225ac8b9b8e18cfafcd65d0 Mon Sep 17 00:00:00 2001
From: Austin Gill <notgnoshi@gmail.com>
Date: Mon, 17 Dec 2018 11:15:51 -0700
Subject: [PATCH] Add development settings

---
 agill.xyz/agill_xyz/settings.py               | 22 +++++-----
 mc.agill.xyz/mc_agill_xyz/settings.py         | 22 +++++-----
 nginx/agill.xyz/nginx.conf                    | 42 +++++++++----------
 nginx/blog.agill.xyz/nginx.conf               | 36 ++++++++--------
 nginx/git.agill.xyz/nginx.conf                | 36 ++++++++--------
 nginx/mc.agill.xyz/nginx.conf                 | 42 +++++++++----------
 nginx/monitor.agill.xyz/nginx.conf            | 36 ++++++++--------
 nginx/nas.agill.xyz/nginx.conf                | 30 ++++++-------
 nginx/pihole.agill.xyz/nginx.conf             | 36 ++++++++--------
 nginx/plex.agill.xyz/nginx.conf               | 38 ++++++++---------
 nginx/research.agill.xyz/nginx.conf           | 42 +++++++++----------
 nginx/wiki.agill.xyz/nginx.conf               | 38 ++++++++---------
 .../research_agill_xyz/settings.py            | 22 +++++-----
 13 files changed, 221 insertions(+), 221 deletions(-)

diff --git a/agill.xyz/agill_xyz/settings.py b/agill.xyz/agill_xyz/settings.py
index ed637a8..fc17607 100644
--- a/agill.xyz/agill_xyz/settings.py
+++ b/agill.xyz/agill_xyz/settings.py
@@ -24,7 +24,7 @@ with open('/etc/django/secret.txt', 'r') as f:
     SECRET_KEY = f.read().strip()
 
 # SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = False
+DEBUG = True
 
 ALLOWED_HOSTS = ['localhost', 'agill.xyz']
 
@@ -60,16 +60,16 @@ MIDDLEWARE = (
     'django.middleware.security.SecurityMiddleware',
 )
 MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'
-CSRF_COOKIE_SECURE = True
-SESSION_COOKIE_SECURE = True
-X_FRAME_OPTIONS = 'DENY'
-SECURE_SSL_REDIRECT = True
-SECURE_BROWSER_XSS_FILTER = True
-SECURE_CONTENT_TYPE_NOSNIFF = True
-SECURE_HSTS_SECONDS = 1024
-SECURE_HSTS_PRELOAD = True
-# Some subdomains will not have SSL
-SECURE_HSTS_INCLUDE_SUBDOMAINS = False
+# CSRF_COOKIE_SECURE = True
+# SESSION_COOKIE_SECURE = True
+# X_FRAME_OPTIONS = 'DENY'
+# SECURE_SSL_REDIRECT = True
+# SECURE_BROWSER_XSS_FILTER = True
+# SECURE_CONTENT_TYPE_NOSNIFF = True
+# SECURE_HSTS_SECONDS = 1024
+# SECURE_HSTS_PRELOAD = True
+# # Some subdomains will not have SSL
+# SECURE_HSTS_INCLUDE_SUBDOMAINS = False
 ROOT_URLCONF = 'agill_xyz.urls'
 WSGI_APPLICATION = 'agill_xyz.wsgi.application'
 STATIC_URL = '/static/'
diff --git a/mc.agill.xyz/mc_agill_xyz/settings.py b/mc.agill.xyz/mc_agill_xyz/settings.py
index 54884c3..1d4e0f2 100644
--- a/mc.agill.xyz/mc_agill_xyz/settings.py
+++ b/mc.agill.xyz/mc_agill_xyz/settings.py
@@ -24,7 +24,7 @@ with open('/etc/django/secret.txt', 'r') as f:
     SECRET_KEY = f.read().strip()
 
 # SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = False
+DEBUG = True
 
 ALLOWED_HOSTS = ['mc.localhost', 'mc.agill.xyz']
 
@@ -60,16 +60,16 @@ MIDDLEWARE = (
     'django.middleware.security.SecurityMiddleware',
 )
 MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'
-CSRF_COOKIE_SECURE = True
-SESSION_COOKIE_SECURE = True
-X_FRAME_OPTIONS = 'DENY'
-SECURE_SSL_REDIRECT = True
-SECURE_BROWSER_XSS_FILTER = True
-SECURE_CONTENT_TYPE_NOSNIFF = True
-SECURE_HSTS_SECONDS = 1024
-SECURE_HSTS_PRELOAD = True
-# Some subdomains will not have SSL
-SECURE_HSTS_INCLUDE_SUBDOMAINS = False
+# CSRF_COOKIE_SECURE = True
+# SESSION_COOKIE_SECURE = True
+# X_FRAME_OPTIONS = 'DENY'
+# SECURE_SSL_REDIRECT = True
+# SECURE_BROWSER_XSS_FILTER = True
+# SECURE_CONTENT_TYPE_NOSNIFF = True
+# SECURE_HSTS_SECONDS = 1024
+# SECURE_HSTS_PRELOAD = True
+# # Some subdomains will not have SSL
+# SECURE_HSTS_INCLUDE_SUBDOMAINS = False
 ROOT_URLCONF = 'mc_agill_xyz.urls'
 WSGI_APPLICATION = 'mc_agill_xyz.wsgi.application'
 STATIC_URL = '/static/'
diff --git a/nginx/agill.xyz/nginx.conf b/nginx/agill.xyz/nginx.conf
index 1325eb8..52e14dc 100644
--- a/nginx/agill.xyz/nginx.conf
+++ b/nginx/agill.xyz/nginx.conf
@@ -8,17 +8,17 @@ upstream agill_xyz_django {
 server {
     # Either server address or fully-qualified domain name.
     server_name localhost agill.xyz;
-    # listen 80; # Uncomment for development environment
-
-    # Adds SSL support. Comment out for development environment
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    listen 80; # Uncomment for development environment
+
+    # # Adds SSL support. Comment out for development environment
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 
     charset utf-8;
 
@@ -39,13 +39,13 @@ server {
     }
 }
 
-# Adds SSL support. Comment out for development environment
-server {
-    if ($host = agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
-    listen 80 default_server;
-    listen [::]:80 default_server;
-    server_name agill.xyz;
-    return 404; # managed by Certbot
-}
+# # Adds SSL support. Comment out for development environment
+# server {
+#     if ($host = agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
+#     listen 80 default_server;
+#     listen [::]:80 default_server;
+#     server_name agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/blog.agill.xyz/nginx.conf b/nginx/blog.agill.xyz/nginx.conf
index 9451c6a..dda67ec 100644
--- a/nginx/blog.agill.xyz/nginx.conf
+++ b/nginx/blog.agill.xyz/nginx.conf
@@ -2,28 +2,28 @@ server {
     # The BASE_REPOSITORY_PATH path is generated by deploy.py
 	root BASE_REPOSITORY_PATH/blog.agill.xyz;
 	server_name blog.agill.xyz;
-    # listen 80; # Uncomment for development environment
+    listen 80; # Uncomment for development environment
 
 	index index.html index.htm;
 
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 }
 
-server {
-    if ($host = blog.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+# server {
+#     if ($host = blog.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
 
-	listen 80;
-	listen [::]:80;
-	server_name blog.agill.xyz;
-    return 404; # managed by Certbot
-}
+# 	listen 80;
+# 	listen [::]:80;
+# 	server_name blog.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/git.agill.xyz/nginx.conf b/nginx/git.agill.xyz/nginx.conf
index 5e72f63..b0ffc57 100644
--- a/nginx/git.agill.xyz/nginx.conf
+++ b/nginx/git.agill.xyz/nginx.conf
@@ -5,7 +5,7 @@ upstream gogs-backend {
 
 server {
 	server_name git.agill.xyz;
-    # listen 80; # Uncomment for development environment
+    listen 80; # Uncomment for development environment
 
     location / {
         proxy_set_header    X-Forwarded-Host $host;
@@ -14,24 +14,24 @@ server {
         proxy_pass http://gogs-backend;
     }
 
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 }
 
-server {
-    if ($host = git.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+# server {
+#     if ($host = git.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
 
-	listen 80;
-	listen [::]:80;
-	server_name git.agill.xyz;
-    return 404; # managed by Certbot
-}
+# 	listen 80;
+# 	listen [::]:80;
+# 	server_name git.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/mc.agill.xyz/nginx.conf b/nginx/mc.agill.xyz/nginx.conf
index d8f696e..e50dadd 100644
--- a/nginx/mc.agill.xyz/nginx.conf
+++ b/nginx/mc.agill.xyz/nginx.conf
@@ -8,17 +8,17 @@ upstream mc_agill_xyz_django {
 server {
     # Either server address or fully-qualified domain name.
     server_name localhost mc.agill.xyz;
-    # listen 80; # Uncomment for development environment
-
-    # Adds SSL support. Comment out for development environment
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    listen 80; # Uncomment for development environment
+
+    # # Adds SSL support. Comment out for development environment
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 
     charset utf-8;
 
@@ -39,13 +39,13 @@ server {
     }
 }
 
-# Adds SSL support. Comment out for development environment
-server {
-    if ($host = mc.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
-    listen 80;
-    listen [::]:80;
-    server_name mc.agill.xyz;
-    return 404; # managed by Certbot
-}
+# # Adds SSL support. Comment out for development environment
+# server {
+#     if ($host = mc.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
+#     listen 80;
+#     listen [::]:80;
+#     server_name mc.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/monitor.agill.xyz/nginx.conf b/nginx/monitor.agill.xyz/nginx.conf
index b5b075e..3527cbb 100644
--- a/nginx/monitor.agill.xyz/nginx.conf
+++ b/nginx/monitor.agill.xyz/nginx.conf
@@ -5,7 +5,7 @@ upstream netdata-backend {
 
 server {
 	server_name monitor.agill.xyz;
-    # listen 80; # Uncomment for development environment
+    listen 80; # Uncomment for development environment
 
     location / {
         proxy_set_header X-Forwarded-Host $host;
@@ -17,24 +17,24 @@ server {
         proxy_store off;
     }
 
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 }
 
-server {
-    if ($host = monitor.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+# server {
+#     if ($host = monitor.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
 
-	listen 80;
-	listen [::]:80;
-	server_name monitor.agill.xyz;
-    return 404; # managed by Certbot
-}
+# 	listen 80;
+# 	listen [::]:80;
+# 	server_name monitor.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/nas.agill.xyz/nginx.conf b/nginx/nas.agill.xyz/nginx.conf
index f41d0ba..d6d56e8 100644
--- a/nginx/nas.agill.xyz/nginx.conf
+++ b/nginx/nas.agill.xyz/nginx.conf
@@ -1,7 +1,7 @@
 server {
     client_max_body_size 2m;
     server_name nas.agill.xyz;
-    # listen 80; # Uncomment for development environment
+    listen 80; # Uncomment for development environment
 
     # Redirect SSL connections from the outside through Limbo, and to Affliction on port 5001.
     location / {
@@ -12,20 +12,20 @@ server {
         proxy_buffering off;
 	}
 
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 }
 
-server {
-    if ($host = nas.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+# server {
+#     if ($host = nas.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
 
-    listen 80;
-    listen [::]:80;
-    server_name nas.agill.xyz;
-    return 404; # managed by Certbot
-}
+#     listen 80;
+#     listen [::]:80;
+#     server_name nas.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/pihole.agill.xyz/nginx.conf b/nginx/pihole.agill.xyz/nginx.conf
index 793bb72..fe768c9 100644
--- a/nginx/pihole.agill.xyz/nginx.conf
+++ b/nginx/pihole.agill.xyz/nginx.conf
@@ -1,7 +1,7 @@
 server {
 	root /var/www/html/admin;
 	server_name pihole.agill.xyz;
-	# listen 80; # Uncomment for development environment
+	listen 80; # Uncomment for development environment
 	autoindex off;
 
 	index index.php index.html index.htm;
@@ -20,24 +20,24 @@ server {
 		deny all;
 	}
 
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 }
 
-server {
-    if ($host = pihole.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+# server {
+#     if ($host = pihole.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
 
-	listen 80;
-	listen [::]:80;
-	server_name pihole.agill.xyz;
-    return 404; # managed by Certbot
-}
+# 	listen 80;
+# 	listen [::]:80;
+# 	server_name pihole.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/plex.agill.xyz/nginx.conf b/nginx/plex.agill.xyz/nginx.conf
index 82428c0..d94d8a3 100644
--- a/nginx/plex.agill.xyz/nginx.conf
+++ b/nginx/plex.agill.xyz/nginx.conf
@@ -4,7 +4,7 @@ upstream plex-backend {
 
 server {
 	server_name plex.agill.xyz;
-    # listen 80; # Uncomment for development environment
+    listen 80; # Uncomment for development environment
 
     location / {
         if ($http_x_plex_device_name = '' ) {
@@ -18,25 +18,25 @@ server {
         proxy_pass https://plex-backend;
     }
 
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 
-    # Redirect non-https traffic to https
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    # # Redirect non-https traffic to https
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 }
 
-server {
-    if ($host = plex.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+# server {
+#     if ($host = plex.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
 
-	listen 80;
-	listen [::]:80;
-	server_name plex.agill.xyz;
-    return 404; # managed by Certbot
-}
+# 	listen 80;
+# 	listen [::]:80;
+# 	server_name plex.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/research.agill.xyz/nginx.conf b/nginx/research.agill.xyz/nginx.conf
index d7e2f9b..0a84779 100644
--- a/nginx/research.agill.xyz/nginx.conf
+++ b/nginx/research.agill.xyz/nginx.conf
@@ -8,17 +8,17 @@ upstream research_agill_xyz_django {
 server {
     # Either server address or fully-qualified domain name.
     server_name research.localhost research.agill.xyz;
-    # listen 80; # Uncomment for development environment
-
-    # Adds SSL support. Comment out for development environment.
-    listen 443 ssl; # managed by Certbot
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
-    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
-    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    listen 80; # Uncomment for development environment
+
+    # # Adds SSL support. Comment out for development environment.
+    # listen 443 ssl; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
+    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 
     charset utf-8;
 
@@ -39,13 +39,13 @@ server {
     }
 }
 
-# Adds SSL support. Comment out for development environment
-server {
-    if ($host = research.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
-    listen 80;
-    listen [::]:80;
-    server_name research.agill.xyz;
-    return 404; # managed by Certbot
-}
+# # Adds SSL support. Comment out for development environment
+# server {
+#     if ($host = research.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
+#     listen 80;
+#     listen [::]:80;
+#     server_name research.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/nginx/wiki.agill.xyz/nginx.conf b/nginx/wiki.agill.xyz/nginx.conf
index 9678a30..116f553 100644
--- a/nginx/wiki.agill.xyz/nginx.conf
+++ b/nginx/wiki.agill.xyz/nginx.conf
@@ -1,7 +1,7 @@
 server {
-    # listen 80; # Uncomment for development environment
-    listen [::]:443 ssl;
-    listen 443 ssl;
+    listen 80; # Uncomment for development environment
+    # listen [::]:443 ssl;
+    # listen 443 ssl;
 
     server_name wiki.agill.xyz;
 
@@ -41,22 +41,22 @@ server {
         fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
     }
 
-    ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
-    ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
+    # ssl_certificate /etc/letsencrypt/live/agill.xyz/fullchain.pem; # managed by Certbot
+    # ssl_certificate_key /etc/letsencrypt/live/agill.xyz/privkey.pem; # managed by Certbot
 
-    # Redirect non-https traffic to https
-    if ($scheme != "https") {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
+    # # Redirect non-https traffic to https
+    # if ($scheme != "https") {
+    #     return 301 https://$host$request_uri;
+    # } # managed by Certbot
 }
 
-server {
-    if ($host = wiki.agill.xyz) {
-        return 301 https://$host$request_uri;
-    } # managed by Certbot
-
-    listen       80;
-    listen       [::]:80;
-    server_name  wiki.agill.xyz;
-    return 404; # managed by Certbot
-}
+# server {
+#     if ($host = wiki.agill.xyz) {
+#         return 301 https://$host$request_uri;
+#     } # managed by Certbot
+
+#     listen       80;
+#     listen       [::]:80;
+#     server_name  wiki.agill.xyz;
+#     return 404; # managed by Certbot
+# }
diff --git a/research.agill.xyz/research_agill_xyz/settings.py b/research.agill.xyz/research_agill_xyz/settings.py
index a26a78f..428b117 100644
--- a/research.agill.xyz/research_agill_xyz/settings.py
+++ b/research.agill.xyz/research_agill_xyz/settings.py
@@ -25,7 +25,7 @@ with open('/etc/django/secret.txt', 'r') as f:
     SECRET_KEY = f.read().strip()
 
 # SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = False
+DEBUG = True
 
 ALLOWED_HOSTS = ['research.localhost', 'research.agill.xyz']
 
@@ -61,16 +61,16 @@ MIDDLEWARE = (
     'django.middleware.security.SecurityMiddleware',
 )
 MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'
-CSRF_COOKIE_SECURE = True
-SESSION_COOKIE_SECURE = True
-X_FRAME_OPTIONS = 'DENY'
-SECURE_SSL_REDIRECT = True
-SECURE_BROWSER_XSS_FILTER = True
-SECURE_CONTENT_TYPE_NOSNIFF = True
-SECURE_HSTS_SECONDS = 1024
-SECURE_HSTS_PRELOAD = True
-# Some subdomains will not have SSL
-SECURE_HSTS_INCLUDE_SUBDOMAINS = False
+# CSRF_COOKIE_SECURE = True
+# SESSION_COOKIE_SECURE = True
+# X_FRAME_OPTIONS = 'DENY'
+# SECURE_SSL_REDIRECT = True
+# SECURE_BROWSER_XSS_FILTER = True
+# SECURE_CONTENT_TYPE_NOSNIFF = True
+# SECURE_HSTS_SECONDS = 1024
+# SECURE_HSTS_PRELOAD = True
+# # Some subdomains will not have SSL
+# SECURE_HSTS_INCLUDE_SUBDOMAINS = False
 ROOT_URLCONF = 'research_agill_xyz.urls'
 WSGI_APPLICATION = 'research_agill_xyz.wsgi.application'
 STATIC_URL = '/static/'
-- 
2.17.1

